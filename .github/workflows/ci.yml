name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  GO_VERSION: '1.25'

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5

      - uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
          cache: true
          cache-dependency-path: |
            server/go.sum
            grafana-plugin/go.sum

      - name: golangci-lint server
        uses: golangci/golangci-lint-action@v8
        with:
          version: latest
          args: --timeout=10m
          working-directory: server

      - name: golangci-lint grafana-plugin
        uses: golangci/golangci-lint-action@v8
        with:
          version: latest
          args: --timeout=10m
          working-directory: grafana-plugin

  test:
    name: Test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        go: ['1.23', '1.24', '1.25']
    steps:
      - uses: actions/checkout@v5

      - uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go }}
          cache: true
          cache-dependency-path: |
            server/go.sum
            grafana-plugin/go.sum

      - name: Run tests
        run: |
          cd server && go test ./...
          cd ../grafana-plugin && go test ./pkg/...

      - name: Upload coverage
        if: matrix.os == 'ubuntu-latest' && matrix.go == '1.25'
        uses: codecov/codecov-action@v5
        with:
          files: ./coverage.out
          flags: unittests
          name: codecov-umbrella

  plugin-frontend:
    name: Plugin Frontend Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5

      - uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'
          cache-dependency-path: grafana-plugin/package-lock.json

      - name: Install dependencies
        working-directory: grafana-plugin
        run: npm ci

      - name: Check types
        working-directory: grafana-plugin
        run: npm run typecheck

      - name: Lint
        working-directory: grafana-plugin
        run: npm run lint

      - name: Unit tests
        working-directory: grafana-plugin
        run: npm run test:ci

      - name: Build frontend
        working-directory: grafana-plugin
        run: npm run build

  integration-test:
    name: Integration Tests
    runs-on: ubuntu-latest
    services:
      docker:
        image: docker:dind
        options: --privileged
    steps:
      - uses: actions/checkout@v5

      - uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
          cache: true
          cache-dependency-path: server/go.sum

      - name: Run integration tests
        run: cd server && go test -v -tags=integration -timeout 10m ./...
        timeout-minutes: 15

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: [lint, test, plugin-frontend]
    strategy:
      matrix:
        include:
          - goos: linux
            goarch: amd64
          - goos: linux
            goarch: arm64
          - goos: darwin
            goarch: amd64
          - goos: darwin
            goarch: arm64
          - goos: windows
            goarch: amd64
    steps:
      - uses: actions/checkout@v5

      - uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
          cache: true
          cache-dependency-path: server/go.sum

      - name: Build binary
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
        run: |
          cd server && go build -v -o ../grql-${{ matrix.goos }}-${{ matrix.goarch }} ./cmd/server

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: grql-${{ matrix.goos }}-${{ matrix.goarch }}
          path: grql-${{ matrix.goos }}-${{ matrix.goarch }}

  proto-check:
    name: Protobuf Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5

      - uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
          cache: true
          cache-dependency-path: |
            server/go.sum
            grafana-plugin/go.sum

      - name: Install protoc
        uses: arduino/setup-protoc@v3
        with:
          version: '32.x'

      - name: Install protoc-gen-go
        run: |
          go install google.golang.org/protobuf/cmd/protoc-gen-go@latest
          go install google.golang.org/grpc/cmd/protoc-gen-go-grpc@latest

      - name: Generate proto
        run: make proto

      - name: Check for changes
        run: |
          git diff --exit-code || (echo "Protobuf files are out of date. Please run 'make proto' and commit the changes." && exit 1)
