syntax = "proto3";

package grql.v1;

option go_package = "github.com/cedricziel/grql/proto/grql/v1;grqlv1";

// Query service for SQL-like query language
service QueryService {
  // Execute a query and return results
  rpc ExecuteQuery(QueryRequest) returns (QueryResponse);
  
  // Stream query results for large datasets
  rpc StreamQuery(QueryRequest) returns (stream QueryResult);
}

// Request message containing the SQL-like query
message QueryRequest {
  string query = 1;
  map<string, string> parameters = 2;
  int32 limit = 3;
  int32 offset = 4;
  ResponseFormat response_format = 5;  // Optional: desired response format
}

// Response message containing query results
message QueryResponse {
  repeated QueryResult results = 1;
  QueryMetadata metadata = 2;
  string error = 3;
}

// Individual query result row
message QueryResult {
  map<string, Value> fields = 1;
}

// Value wrapper to support different data types
message Value {
  oneof value {
    string string_value = 1;
    int64 int_value = 2;
    double float_value = 3;
    bool bool_value = 4;
    bytes bytes_value = 5;
  }
}

// Data type of the query response
enum DataType {
  TABLE = 0;        // Generic tabular data
  TIME_SERIES = 1;  // Has time field + numeric values
  LOGS = 2;         // Log entries with timestamp
  TRACES = 3;       // Distributed trace data
}

// Response format options
enum ResponseFormat {
  PROTOBUF = 0;     // Default protobuf format
  ARROW = 1;        // Apache Arrow format (future)
}

// Metadata about query execution
message QueryMetadata {
  int64 rows_affected = 1;
  int64 execution_time_ms = 2;
  repeated ColumnInfo columns = 3;
  
  // Enhanced metadata fields
  DataType data_type = 4;                // Type of data returned
  repeated string group_by_fields = 5;   // Fields used in GROUP BY
  repeated string time_fields = 6;       // Fields containing time data
  map<string, string> field_units = 7;   // Units per field (e.g., "cpu" -> "percent")
}

// Column information
message ColumnInfo {
  string name = 1;
  string type = 2;
}